"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = void 0;
const plugin_helpers_1 = require("@graphql-codegen/plugin-helpers");
const schema_ast_1 = require("@graphql-codegen/schema-ast");
const plugin_config_js_1 = require("./config/plugin-config.js");
const index_js_1 = require("./freezed-declaration-blocks/index.js");
const schema_visitor_js_1 = require("./schema-visitor.js");
const plugin = (schema, _documents, _config, info) => {
    var _a;
    // sets the defaults for the config
    const config = { ...plugin_config_js_1.defaultFreezedPluginConfig, ..._config };
    const { schema: _schema, ast } = (0, schema_ast_1.transformSchemaAST)(schema, config);
    const { nodeRepository, ...visitor } = (0, schema_visitor_js_1.schemaVisitor)(_schema, config);
    const visitorResult = (0, plugin_helpers_1.oldVisit)(ast, { leave: visitor });
    const importStatements = index_js_1.Block.buildImportStatements((_a = info === null || info === void 0 ? void 0 : info.outputFile) !== null && _a !== void 0 ? _a : 'app_models');
    const generatedBlocks = visitorResult.definitions.filter((def) => typeof def === 'string' && def.length > 0);
    // return [importStatements, ...generatedBlocks].join('').trim();
    const output = index_js_1.Block.replaceTokens(config, nodeRepository, generatedBlocks);
    return [importStatements, output].join('').trim();
};
exports.plugin = plugin;
